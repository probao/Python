练习8
whwu@master:~/script/python/LPTHW> cat ex8.py
formatter="%r %r %r %r"

print formatter % (1,2,3,4)
print formatter % ("one","two","three","four")
print formatter % (True,False,False,True)
print formatter % (
        "I had this thing.",
        "That you could type up right.",
        "But it didn't sing.",
        "So I said goodnight."
)
whwu@master:~/script/python/LPTHW> python ex8.py
1 2 3 4
'one' 'two' 'three' 'four'
True False False True
'I had this thing.' 'That you could type up right.' "But it didn't sing." 'So I said goodnight.'

为什么 “one” 要用引号，而 True 和 False 不需要？
因为 True 和 False 是 Python 的关键字，用来表示真假的意义。如果你加了引号，它们就变成
了字符串，也就无法实现它们本来的功能了。习题 27 中会有详细说明。
我在字符中包含了中文（或者其它非 ASCII 字符），可是 %r 打印出的是乱码？
使用 %s 就行了。
为什么 %r 有时打印出来的是单引号，而我实际用的是双引号？
Python 会用最有效的方式打印出字符串，而不是完全按照你写的方式来打印。这样做对于 %r 来
说是可以接受的，因为它是用作 debug 和排错，没必要非打印出多好看的格式。


练习9
whwu@master:~/script/python/LPTHW> cat ex9.py
#Here's some new strange stuff, remember type it exactly.

days = "Mon Tue Wed Thu Fri Sat Sun"
#months = "Jan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug"
months = "\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug"

print "Here are the days:", days
print "Here are the months:", months

print """
There's something going on here.
With the three double-quotes.
We'll be able to type as much as we like.
Even 4 lines if we want, or 5, or 6.
"""
whwu@master:~/script/python/LPTHW> python ex9.py
Here are the days: Mon Tue Wed Thu Fri Sat Sun
Here are the months:
Jan
Feb
Mar
Apr
May
Jun
Jul
Aug


There's something going on here.
With the three double-quotes.
We'll be able to type as much as we like.
Even 4 lines if we want, or 5, or 6.

怎样将月份显示在新的一行？
字符串以 \n 开始就可以了，像这样：
"\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug"

练习10

whwu@master:~/script/python/LPTHW> cat ex10.py
tabby_cat = "\tI'm tabbed in."
persian_cat = "I'm split\non a line."
backslash_cat = "I'm \\ a \\ cat."

fat_cat = """
I'll do a list:
\t* Cat food
\t* Fishies
\t* Catnip\n\t* Grass
"""

print tabby_cat
print persian_cat
print backslash_cat
print fat_cat

whwu@master:~/script/python/LPTHW> python ex10.py
        I'm tabbed in.
I'm split
on a line.
I'm \ a \ cat.

I'll do a list:
        * Cat food
        * Fishies
        * Catnip
        * Grass


whwu@master:~/script/python/LPTHW> cat ex10plus1.py
while True:
        for i in ["/","-","|","\\","|"]:
#               print "%s\r" % i,
                print "%s" % i,


练习11
whwu@master:~/script/python/LPTHW> cat ex11.py
print "How old are you?",
age = raw_input()
print "How tall are you?",
height = raw_input()
print "How much do you weigh?",
weight = raw_input()

print "So, you're %r old, %r tall and %r heavy." %(
age, height,weight)


whwu@master:~/script/python/LPTHW> python ex11.py
How old are you? 35
How tall are you? 6'5''
How much do you weigh? 180lbs
So, you're '35' old, "6'5''" tall and '180lbs' heavy.

Note
注意到我在每行 print 后面加了个逗号(comma) , 了吧？这样的话 print 就不会输出新行符而结束
这一行跑到下一行去了。


input和raw_input在处理数字时是有区别的：
1.输入为纯数字时
input返回的是数值类型，如int,float
 raw_inpout返回的是字符串类型，string类型
whwu@master:~/script/python/LPTHW> cat ex11plus1.py
print "how old are you?"
age1 = input()
print "%r" % age1
print
age2 = raw_input()
print "%r" %age2
whwu@master:~/script/python/LPTHW> python ex11plus1.py
how old are you?
22
22

22
'22'//raw_input()把输入整形当做字符串处理  


2.输入字符串为表达式
input会计算在字符串中的数字表达式，而raw_input不会。
whwu@master:~/script/python/LPTHW> cat ex11plus2.py
sum = input()
print "%r" % sum
print

sum = raw_input()
print "%r" % sum
whwu@master:~/script/python/LPTHW> python ex11plus2.py
1+2
3

1+2
'1+2'
input() 和 raw_input() 有何不同？
input() 函数会把你输入的东西当做 Python 代码进行处理，这么做会有安全问题，你应该避开
这个函数。


练习12
whwu@master:~/script/python/LPTHW> cat ex12.py
age= raw_input("How old are you?")
height = raw_input("How tall are you?")
weight = raw_input("How much do you weigh?")

print "So, you're %r old, %r tall and %r heavy." % (
        age,height,weight)
whwu@master:~/script/python/LPTHW> python ex12.py
How old are you?35
How tall are you?6'2"
How much do you weigh?190lbs
So, you're '35' old, '6\'2"' tall and '190lbs' heavy.



练习13
whwu@master:~/script/python/LPTHW> python ex13.py wu wei hong
The script is called: ex13.py
Your first variable is: wu
Your second variable is: wei
Your third variable is: hong
whwu@master:~/script/python/LPTHW> cat ex13.py
from sys import argv

script,first,second,third = argv

script,first,second,third = argv

print "The script is called:", script
print "Your first variable is:", first
print "Your second variable is:", second
print "Your third variable is:", third
